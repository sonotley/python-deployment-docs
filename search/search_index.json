{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Why I wrote this page This is a reference for my future self, but also for anyone I work with or who may find it useful that covers my workflow for getting my Python programmes to users or servers. In general, I have two target use-cases when I'm writing code: I'm providing a utility for users to use on their workstations - generally Windows PCs I'm proving software to be run as a service on a server, often Windows but sometimes Linux These two use-cases share some similarities: I can't guarantee the version of Python (or eventhe existence of Python) on the target system I don't want the installer or user to need to know any Python or to do lots of setup work, it needs to just install and work I don't want the deployed code to be scattered around non-obvious places, ideally everything should be in one directory so it can be uninstalled simply by deleting that directory In the case of deployment to a server there is an important addition to the third point above: The installed software must not have any dependence on the continued existence of the user account by which it was installed. My dev environment","title":"Home"},{"location":"#why-i-wrote-this-page","text":"This is a reference for my future self, but also for anyone I work with or who may find it useful that covers my workflow for getting my Python programmes to users or servers. In general, I have two target use-cases when I'm writing code: I'm providing a utility for users to use on their workstations - generally Windows PCs I'm proving software to be run as a service on a server, often Windows but sometimes Linux These two use-cases share some similarities: I can't guarantee the version of Python (or eventhe existence of Python) on the target system I don't want the installer or user to need to know any Python or to do lots of setup work, it needs to just install and work I don't want the deployed code to be scattered around non-obvious places, ideally everything should be in one directory so it can be uninstalled simply by deleting that directory In the case of deployment to a server there is an important addition to the third point above: The installed software must not have any dependence on the continued existence of the user account by which it was installed. My dev environment","title":"Why I wrote this page"},{"location":"dev/","text":"My development environment My development environment consists of: Pycharm IDE with Poetry plugin Poetry Git Of course, you don't have to use Pycharm, you can use VS Code or just a text editor. However I like it and it integrates neatly with the other two (which are more pivotal to my workflow).","title":"Dev"},{"location":"dev/#my-development-environment","text":"My development environment consists of: Pycharm IDE with Poetry plugin Poetry Git Of course, you don't have to use Pycharm, you can use VS Code or just a text editor. However I like it and it integrates neatly with the other two (which are more pivotal to my workflow).","title":"My development environment"}]}